/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/tektoncd/experimental/crd-loadtest/pkg/apis/wlynch.dev/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// CRDLoadtestLister helps list CRDLoadtests.
// All objects returned here must be treated as read-only.
type CRDLoadtestLister interface {
	// List lists all CRDLoadtests in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CRDLoadtest, err error)
	// CRDLoadtests returns an object that can list and get CRDLoadtests.
	CRDLoadtests(namespace string) CRDLoadtestNamespaceLister
	CRDLoadtestListerExpansion
}

// cRDLoadtestLister implements the CRDLoadtestLister interface.
type cRDLoadtestLister struct {
	indexer cache.Indexer
}

// NewCRDLoadtestLister returns a new CRDLoadtestLister.
func NewCRDLoadtestLister(indexer cache.Indexer) CRDLoadtestLister {
	return &cRDLoadtestLister{indexer: indexer}
}

// List lists all CRDLoadtests in the indexer.
func (s *cRDLoadtestLister) List(selector labels.Selector) (ret []*v1alpha1.CRDLoadtest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CRDLoadtest))
	})
	return ret, err
}

// CRDLoadtests returns an object that can list and get CRDLoadtests.
func (s *cRDLoadtestLister) CRDLoadtests(namespace string) CRDLoadtestNamespaceLister {
	return cRDLoadtestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// CRDLoadtestNamespaceLister helps list and get CRDLoadtests.
// All objects returned here must be treated as read-only.
type CRDLoadtestNamespaceLister interface {
	// List lists all CRDLoadtests in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.CRDLoadtest, err error)
	// Get retrieves the CRDLoadtest from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.CRDLoadtest, error)
	CRDLoadtestNamespaceListerExpansion
}

// cRDLoadtestNamespaceLister implements the CRDLoadtestNamespaceLister
// interface.
type cRDLoadtestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all CRDLoadtests in the indexer for a given namespace.
func (s cRDLoadtestNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.CRDLoadtest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.CRDLoadtest))
	})
	return ret, err
}

// Get retrieves the CRDLoadtest from the indexer for a given namespace and name.
func (s cRDLoadtestNamespaceLister) Get(name string) (*v1alpha1.CRDLoadtest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("crdloadtest"), name)
	}
	return obj.(*v1alpha1.CRDLoadtest), nil
}
